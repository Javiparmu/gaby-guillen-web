---
import type { Painting } from '../types';
import PaintingSectionContainer from './PaintingSectionContainer.astro';
import PaintingContainer from './PaintingContainer.svelte';

export const prerender = false;

interface Props {
    painting: Painting;
    isEvenPosition: boolean;
}

const {painting, isEvenPosition} = Astro.props;
---

<PaintingSectionContainer isEvenPosition={isEvenPosition}>
    <PaintingContainer slot={!isEvenPosition ? 'before' : 'after'} client:visible>
        <img 
            class="section-image max-h-[38dvh] lg:max-h-[80dvh] lg:max-w-[400px] rounded-md shadow-lg md:shadow-2xl cursor-pointer" 
            src={painting.image_url} 
            alt={painting.title} 
            decoding='async' 
            loading='lazy' 
        />
    </PaintingContainer>
    <div class="flex flex-col items-center lg:items-start gap-y-[2.5dvh] lg:gap-y-4">
        <h2 class:list={["text-3xl text-center lg:text-5xl tracking-tight font-extrabold lg:mb-4", {'text-gray-900': !isEvenPosition, 'text-white': isEvenPosition}]} class="">{painting.title}</h2>
        <p class:list={["font-light text-sm lg:text-lg text-center lg:text-start", {'text-gray-800': !isEvenPosition, 'text-gray-200': isEvenPosition}]}>
            {painting.description}
        </p>
        <p class:list={["font-light text-sm lg:text-lg text-center lg:text-start", {'text-gray-800': !isEvenPosition,'text-gray-200': isEvenPosition}]}>
            Colección: <span class="font-bold">{painting.collection}</span>
        </p>
        <p class:list={["font-light text-sm lg:text-lg text-center lg:text-start", {'text-gray-800': !isEvenPosition,'text-gray-200': isEvenPosition}]}>
            Precio: <span class="font-bold">{painting.price}€</span>
        </p>
    </div>
</PaintingSectionContainer>